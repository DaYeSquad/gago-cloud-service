{"version":3,"sources":["../src/service/aliyun.ts"],"names":[],"mappings":"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","file":"aliyun.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nconst OSS = require('ali-oss');\n\n/**\n * 阿里云的相关参数\n * 注意: 该文档请用中文注释以对应阿里云的名词\n */\nexport class Aliyun {\n  static ossClient_: any;\n\n  /**\n   * 企业别名\n   * @type {string} 企业别名\n   */\n  static ENTERPRISE_ID: string = null;// = '1917856451201954';\n\n  /**\n   * 阿里云产品的 access id\n   * @type {string}\n   */\n  static ACCESS_ID: string = null; // 'LTAIbuVHTjdhr0Nz';\n\n  /**\n   * 阿里云产品的 access secret\n   * @type {string}\n   */\n  static ACCESS_SECRET: string = null; // '6obMhpcupEB8J287J2QG7EiCJTe4lj';\n\n  /**\n   * 阿里云存储 OSS 的地区\n   * @type {string}\n   */\n  static OSS_REGION: string = null; // 'oss-cn-beijing';\n\n  /**\n   * 返回一个 alioss 的对象\n   */\n  static getOssClient(bucket?: string): any {\n    Aliyun.verificationOssConfig();\n    if (!Aliyun.ossClient_) {\n      Aliyun.ossClient_ = new OSS({\n        region: Aliyun.OSS_REGION,\n        accessKeyId: Aliyun.ACCESS_ID,\n        accessKeySecret: Aliyun.ACCESS_SECRET\n      });\n    }\n\n    Aliyun.ossClient_.useBucket(bucket);\n    return Aliyun.ossClient_;\n  }\n  static setConfig(config?: string): void;\n  static setConfig(config: AliyunConfig): void;\n  static setConfig(config?: any): void {\n    if (config instanceof AliyunConfig){\n      Aliyun.ENTERPRISE_ID = config.enterpriseId;\n      Aliyun.ACCESS_ID = config.accessId;\n      Aliyun.ACCESS_SECRET = config.accessSecret;\n      Aliyun.OSS_REGION = config.ossRegion;\n    }else {\n      Aliyun.ENTERPRISE_ID = process.env[\"ENTERPRISE_ID\"];\n      Aliyun.ACCESS_ID = process.env[\"ACCESS_ID\"];\n      Aliyun.ACCESS_SECRET = process.env[\"ACCESS_SECRET\"];\n      Aliyun.OSS_REGION = process.env[\"OSS_REGION\"];\n    }\n  }\n  static verificationConfig(): void {\n    if (Aliyun.ENTERPRISE_ID === undefined || Aliyun.ENTERPRISE_ID === null || Aliyun.ENTERPRISE_ID.length === 0){\n      throw new Error(\"GET_OSS_CLIENT_ERROR_ENTERPRISE_ID\");\n    }\n    Aliyun.verificationOssConfig();\n  }\n  static verificationOssConfig(): void {\n    if (Aliyun.ACCESS_ID === undefined || Aliyun.ACCESS_ID === null || Aliyun.ACCESS_ID.length === 0){\n      throw new Error(\"GET_OSS_CLIENT_ERROR_ACCESS_ID\");\n    }\n    if (Aliyun.ACCESS_SECRET === undefined || Aliyun.ACCESS_SECRET === null || Aliyun.ACCESS_SECRET.length === 0){\n      throw new Error(\"GET_OSS_CLIENT_ERROR_ACCESS_SECRET\");\n    }\n    if (Aliyun.OSS_REGION === undefined || Aliyun.OSS_REGION === null || Aliyun.OSS_REGION.length === 0){\n      throw new Error(\"GET_OSS_CLIENT_ERROR_OSS_REGION\");\n    }\n  }\n}\n\nexport class AliyunConfig {\n  enterpriseId: string;\n  accessId: string;\n  accessSecret: string;\n  ossRegion: string;\n\n  constructor(enterpriseId: string, accessId: string, accessSecret: string, ossRegion: string){\n    this.enterpriseId = enterpriseId;\n    this.accessId = accessId;\n    this.accessSecret = accessSecret;\n    this.ossRegion = ossRegion;\n  }\n\n}\n"]}