{"version":3,"sources":["../src/service/boxservice.ts"],"names":[],"mappings":";;;;;;;;;AAGA,yBAAqB,UAAU,CAAC,CAAA;AAEhC,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AAKzB;IAaE,OAAa,eAAe,CAAC,QAAgB,EAAE,MAAc,EAAE,SAAiB;;YAC9E,MAAM,CAAC,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM;gBACzC,IAAI,SAAS,GAAQ,eAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAEjD,EAAE,CAAC;oBACD,MAAM,MAAM,GAAQ,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;oBAqC7D,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,GAAQ;oBACzB,MAAM,CAAC,GAAG,CAAC,CAAC;gBACd,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;AACH,CAAC;AA7DY,kBAAU,aA6DtB,CAAA","file":"boxservice.js","sourcesContent":["// Copyright 2016 Frank Lin (lin.xiaoe.f@gmail.com). All rights reserved.\n// Use of this source code is governed a license that can be found in the LICENSE file.\n\nimport {Aliyun} from './aliyun';\n\nconst co = require('co');\n\n/**\n * Provides base services for ali-oss.\n */\nexport class BoxService {\n\n  // -------------------------------------------------------------------------\n  // aliyun\n  // -------------------------------------------------------------------------\n\n  /**\n   * Upload file to ali-oss.\n   * @param filePath Local file path.\n   * @param bucket Bucket name.\n   * @param objectKey Object key used in ali-oss.\n   * @returns {Promise<number>} Status code, should be 200 if success.\n   */\n  static async uploadFileToOss(filePath: string, bucket: string, objectKey: string): Promise<number> {\n    return new Promise<number>((resolve, reject) => {\n      let ossClient: any = Aliyun.getOssClient(bucket);\n\n      co(function* () {\n        const result: any = yield ossClient.put(objectKey, filePath);\n\n        /* result is like below (2016-11-2)\n         {\n         \"name\": \"test2.csv\",\n         \"url\": \"http://gago-stations-origin.oss-cn-beijing.aliyuncs.com/test2.csv\",\n         \"res\": {\n         \"status\": 200,\n         \"statusCode\": 200,\n         \"headers\": {\n         \"server\": \"AliyunOSS\",\n         \"date\": \"Wed, 02 Nov 2016 04:54:59 GMT\",\n         \"content-length\": \"0\",\n         \"connection\": \"keep-alive\",\n         \"x-oss-request-id\": \"581971A218EA5E633263D327\",\n         \"etag\": \"\\\"58DC34B718317802B48030B889167E9B\\\"\",\n         \"x-oss-hash-crc64ecma\": \"3065663235719610447\",\n         \"content-md5\": \"WNw0txgxeAK0gDC4iRZ+mw==\",\n         \"x-oss-server-time\": \"16\"\n         },\n         \"size\": 0,\n         \"aborted\": false,\n         \"rt\": 508,\n         \"keepAliveSocket\": false,\n         \"data\": {\n         \"type\": \"Buffer\",\n         \"data\": []\n         },\n         \"requestUrls\": [\n         \"http://gago-stations-origin.oss-cn-beijing.aliyuncs.com/test2.csv\"\n         ],\n         \"timing\": null,\n         \"remoteAddress\": \"101.201.182.226\",\n         \"remotePort\": 80\n         }\n         }\n         */\n        resolve(result['res']['statusCode']);\n      }).catch(function (err: any) {\n        reject(err);\n      });\n    });\n  }\n}\n"]}